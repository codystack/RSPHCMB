{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/components/forms/contact.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CircularProgress, Backdrop, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  formRoot: {\n    \"& > *\": {\n      margin: \"8px auto\",\n      width: \"100%\"\n    }\n  },\n  paperRoot: {\n    padding: theme.spacing(3)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  stepper: {\n    //   backgroundColor:\n    borderRadius: theme.shape.borderRadius\n  },\n  label: {\n    fontSize: \"1.1em\",\n    fontWeight: 600\n  },\n  alternativeLabel: {\n    color: theme.palette.primary\n  },\n  MuiAvatar: {\n    margin: \"0px auto 15px auto\",\n    width: 100,\n    height: 100\n  }\n}));\n\nconst ContactForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formValues, setFormValues] = React.useState({\n    Surname: \"\",\n    First_Name: \"\",\n    Email_Address: \"\",\n    Phone_Number: \"\",\n    Subject: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = React.useState(false); //   const { enqueueSnackbar } = useSnackbar();\n\n  const formRef = /*#__PURE__*/React.createRef();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const clearForm = () => {\n    setFormValues({\n      Surname: \"\",\n      First_Name: \"\",\n      Email_Address: \"\",\n      Phone_Number: \"\",\n      Subject: \"\"\n    });\n  };\n\n  const triggerSubmit = () => {\n    var _formRef$current;\n\n    formRef === null || formRef === void 0 ? void 0 : (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.isFormValid(false).then(isValid => {\n      if (isValid) {\n        formRef.current.submit();\n      }\n    });\n  };\n\n  const submitForm = async e => {// // e.preventDefault();\n    // setIsSubmitting(true);\n    // try {\n    //   const resp = await APIService.contactUs(\n    //     formValues.Surname,\n    //     formValues.First_Name,\n    //     formValues.Email_Address,\n    //     formValues.Phone_Number,\n    //     formValues.Subject\n    //   );\n    //   if (resp.status === 200) {\n    //     clearForm();\n    //     setIsSubmitting(false);\n    //     enqueueSnackbar(`Message sent successfully`, { variant: \"success\" });\n    //   } else {\n    //     setIsSubmitting(false);\n    //   }\n    // } catch (err) {\n    //   enqueueSnackbar(\n    //     `${\n    //       err?.response?.data?.error ||\n    //       err?.response?.statusText ||\n    //       \"Check your internet connection.\"\n    //     }`,\n    //     { variant: \"error\" }\n    //   );\n    //   setIsSubmitting(false);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isSubmitting,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: submitForm,\n      className: classes.formRoot,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        required: true,\n        fullWidth: true,\n        placeholder: \"Full Name\",\n        name: \"Surname\",\n        label: \"Full Name\",\n        value: formValues.Surname,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Full name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            required: true,\n            id: \"Email_Address\",\n            label: \"Email\",\n            variant: \"outlined\",\n            value: formValues.Email_Address,\n            onChange: handleChange,\n            name: \"Email_Address\",\n            type: \"email\",\n            fullWidth: true,\n            validators: [\"required\", \"isEmail\"],\n            errorMessages: [\"Email address field is required\", \"Email address is not valid\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            required: true,\n            name: \"Phone_Number\",\n            label: \"Phone Number\",\n            variant: \"outlined\",\n            value: formValues.Phone_Number,\n            onChange: handleChange,\n            fullWidth: true,\n            validators: [\"required\", \"isNumber\"],\n            errorMessages: [\"Phone Number is required\", \"Invalid Phone Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        required: true,\n        fullWidth: true,\n        placeholder: \"Subject\",\n        name: \"Subject\",\n        label: \"Subject\",\n        value: formValues.Subject,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Subject is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        required: true,\n        fullWidth: true,\n        multiline: true,\n        rows: 8,\n        rowsMax: 12,\n        placeholder: \"Type message\",\n        name: \"Request\",\n        label: \"Request\",\n        value: \"\",\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Message is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: \"purple\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: triggerSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"OVnr2Xj+tuUZBSniSt0xcdPMKWY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/components/forms/contact.js"],"names":["React","ValidatorForm","TextValidator","makeStyles","Button","CircularProgress","Backdrop","Grid","useStyles","theme","root","width","formRoot","margin","paperRoot","padding","spacing","backButton","marginRight","instructions","marginTop","marginBottom","stepper","borderRadius","shape","label","fontSize","fontWeight","alternativeLabel","color","palette","primary","MuiAvatar","height","ContactForm","classes","formValues","setFormValues","useState","Surname","First_Name","Email_Address","Phone_Number","Subject","isSubmitting","setIsSubmitting","formRef","createRef","handleChange","e","name","value","target","prevData","clearForm","triggerSubmit","current","isFormValid","then","isValid","submit","submitForm","zIndex","borderWidth","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,eAAjD;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,QAAQ,EAAE;AACR,aAAS;AACPC,MAAAA,MAAM,EAAE,UADD;AAEPF,MAAAA,KAAK,EAAE;AAFA;AADD,GAJ6B;AAUvCG,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AADA,GAV4B;AAavCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAET,KAAK,CAACO,OAAN,CAAc,CAAd;AADH,GAb2B;AAgBvCG,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAEX,KAAK,CAACO,OAAN,CAAc,CAAd,CADC;AAEZK,IAAAA,YAAY,EAAEZ,KAAK,CAACO,OAAN,CAAc,CAAd;AAFF,GAhByB;AAoBvCM,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,YAAY,EAAEd,KAAK,CAACe,KAAN,CAAYD;AAFnB,GApB8B;AAwBvCE,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,OADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GAxBgC;AA4BvCC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,KAAK,EAAEpB,KAAK,CAACqB,OAAN,CAAcC;AADL,GA5BqB;AA+BvCC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,MAAM,EAAE,oBADC;AAETF,IAAAA,KAAK,EAAE,GAFE;AAGTsB,IAAAA,MAAM,EAAE;AAHC;AA/B4B,CAAZ,CAAD,CAA5B;;AAsCA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8BrC,KAAK,CAACsC,QAAN,CAAe;AACjDC,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,UAAU,EAAE,EAFqC;AAGjDC,IAAAA,aAAa,EAAE,EAHkC;AAIjDC,IAAAA,YAAY,EAAE,EAJmC;AAKjDC,IAAAA,OAAO,EAAE;AALwC,GAAf,CAApC;AAQA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC7C,KAAK,CAACsC,QAAN,CAAe,KAAf,CAAxC,CAVwB,CAWxB;;AACA,QAAMQ,OAAO,gBAAG9C,KAAK,CAAC+C,SAAN,EAAhB;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAf,IAAAA,aAAa,CAAEgB,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,OAACH,IAAD,GAAQC;AAAvB,KAAf,CAAD,CAAb;AACD,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAM;AACtBjB,IAAAA,aAAa,CAAC;AACZE,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,UAAU,EAAE,EAFA;AAGZC,MAAAA,aAAa,EAAE,EAHH;AAIZC,MAAAA,YAAY,EAAE,EAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KAAD,CAAb;AAOD,GARD;;AAUA,QAAMY,aAAa,GAAG,MAAM;AAAA;;AAC1BT,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEU,OAAT,sEAAkBC,WAAlB,CAA8B,KAA9B,EAAqCC,IAArC,CAA2CC,OAAD,IAAa;AACrD,UAAIA,OAAJ,EAAa;AACXb,QAAAA,OAAO,CAACU,OAAR,CAAgBI,MAAhB;AACD;AACF,KAJD;AAKD,GAND;;AAQA,QAAMC,UAAU,GAAG,MAAOZ,CAAP,IAAa,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA7BD;;AA+BA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAElB,YAAzC;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAEf,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAEgC,UADZ;AAEE,MAAA,SAAS,EAAE1B,OAAO,CAACvB,QAFrB;AAGE,MAAA,GAAG,EAAEkC,OAHP;AAAA,8BAKE,QAAC,aAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,IAAI,EAAC,SAJP;AAKE,QAAA,KAAK,EAAC,WALR;AAME,QAAA,KAAK,EAAEV,UAAU,CAACG,OANpB;AAOE,QAAA,QAAQ,EAAES,YAPZ;AAQE,QAAA,OAAO,EAAC,UARV;AASE,QAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,QAAA,aAAa,EAAE,CAAC,uBAAD;AAVjB;AAAA;AAAA;AAAA;AAAA,cALF,eAkBE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,EAAE,EAAC,eAFL;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,KAAK,EAAEZ,UAAU,CAACK,aALpB;AAME,YAAA,QAAQ,EAAEO,YANZ;AAOE,YAAA,IAAI,EAAC,eAPP;AAQE,YAAA,IAAI,EAAC,OARP;AASE,YAAA,SAAS,MATX;AAUE,YAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAVd;AAWE,YAAA,aAAa,EAAE,CACb,iCADa,EAEb,4BAFa;AAXjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,IAAI,EAAC,cAFP;AAGE,YAAA,KAAK,EAAC,cAHR;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,KAAK,EAAEZ,UAAU,CAACM,YALpB;AAME,YAAA,QAAQ,EAAEM,YANZ;AAOE,YAAA,SAAS,MAPX;AAQE,YAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,CARd;AASE,YAAA,aAAa,EAAE,CACb,0BADa,EAEb,sBAFa;AATjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAwDE,QAAC,aAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,WAAW,EAAC,SAHd;AAIE,QAAA,IAAI,EAAC,SAJP;AAKE,QAAA,KAAK,EAAC,SALR;AAME,QAAA,KAAK,EAAEZ,UAAU,CAACO,OANpB;AAOE,QAAA,QAAQ,EAAEK,YAPZ;AAQE,QAAA,OAAO,EAAC,UARV;AASE,QAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,QAAA,aAAa,EAAE,CAAC,qBAAD;AAVjB;AAAA;AAAA;AAAA;AAAA,cAxDF,eAqEE,QAAC,aAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,OAAO,EAAE,EALX;AAME,QAAA,WAAW,EAAC,cANd;AAOE,QAAA,IAAI,EAAC,SAPP;AAQE,QAAA,KAAK,EAAC,SARR;AASE,QAAA,KAAK,EAAC,EATR;AAUE,QAAA,QAAQ,EAAEA,YAVZ;AAWE,QAAA,OAAO,EAAC,UAXV;AAYE,QAAA,UAAU,EAAE,CAAC,UAAD,CAZd;AAaE,QAAA,aAAa,EAAE,CAAC,qBAAD;AAbjB;AAAA;AAAA;AAAA;AAAA,cArEF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eA8FE;AACE,MAAA,KAAK,EAAE;AACLzB,QAAAA,YAAY,EAAE,CADT;AAELwC,QAAAA,WAAW,EAAE,CAFR;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA,6BAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAET,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YA9FF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4GD,CAhLD;;GAAMrB,W;UACY1B,S;;;KADZ0B,W;AAkLN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\n\nimport { CircularProgress, Backdrop, Grid } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  formRoot: {\n    \"& > *\": {\n      margin: \"8px auto\",\n      width: \"100%\",\n    },\n  },\n  paperRoot: {\n    padding: theme.spacing(3),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  stepper: {\n    //   backgroundColor:\n    borderRadius: theme.shape.borderRadius,\n  },\n  label: {\n    fontSize: \"1.1em\",\n    fontWeight: 600,\n  },\n  alternativeLabel: {\n    color: theme.palette.primary,\n  },\n  MuiAvatar: {\n    margin: \"0px auto 15px auto\",\n    width: 100,\n    height: 100,\n  },\n}));\n\nconst ContactForm = () => {\n  const classes = useStyles();\n  const [formValues, setFormValues] = React.useState({\n    Surname: \"\",\n    First_Name: \"\",\n    Email_Address: \"\",\n    Phone_Number: \"\",\n    Subject: \"\",\n  });\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  //   const { enqueueSnackbar } = useSnackbar();\n  const formRef = React.createRef();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const clearForm = () => {\n    setFormValues({\n      Surname: \"\",\n      First_Name: \"\",\n      Email_Address: \"\",\n      Phone_Number: \"\",\n      Subject: \"\",\n    });\n  };\n\n  const triggerSubmit = () => {\n    formRef?.current?.isFormValid(false).then((isValid) => {\n      if (isValid) {\n        formRef.current.submit();\n      }\n    });\n  };\n\n  const submitForm = async (e) => {\n    // // e.preventDefault();\n    // setIsSubmitting(true);\n    // try {\n    //   const resp = await APIService.contactUs(\n    //     formValues.Surname,\n    //     formValues.First_Name,\n    //     formValues.Email_Address,\n    //     formValues.Phone_Number,\n    //     formValues.Subject\n    //   );\n    //   if (resp.status === 200) {\n    //     clearForm();\n    //     setIsSubmitting(false);\n    //     enqueueSnackbar(`Message sent successfully`, { variant: \"success\" });\n    //   } else {\n    //     setIsSubmitting(false);\n    //   }\n    // } catch (err) {\n    //   enqueueSnackbar(\n    //     `${\n    //       err?.response?.data?.error ||\n    //       err?.response?.statusText ||\n    //       \"Check your internet connection.\"\n    //     }`,\n    //     { variant: \"error\" }\n    //   );\n    //   setIsSubmitting(false);\n    // }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isSubmitting}>\n        <CircularProgress\n          size={90}\n          thickness={3.0}\n          style={{ color: \"white\" }}\n        />\n      </Backdrop>\n\n      <ValidatorForm\n        onSubmit={submitForm}\n        className={classes.formRoot}\n        ref={formRef}\n      >\n        <TextValidator\n          required\n          fullWidth\n          placeholder=\"Full Name\"\n          name=\"Surname\"\n          label=\"Full Name\"\n          value={formValues.Surname}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Full name is required\"]}\n        />\n\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} md={6}>\n            <TextValidator\n              required\n              id=\"Email_Address\"\n              label=\"Email\"\n              variant=\"outlined\"\n              value={formValues.Email_Address}\n              onChange={handleChange}\n              name=\"Email_Address\"\n              type=\"email\"\n              fullWidth\n              validators={[\"required\", \"isEmail\"]}\n              errorMessages={[\n                \"Email address field is required\",\n                \"Email address is not valid\",\n              ]}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <TextValidator\n              required\n              name=\"Phone_Number\"\n              label=\"Phone Number\"\n              variant=\"outlined\"\n              value={formValues.Phone_Number}\n              onChange={handleChange}\n              fullWidth\n              validators={[\"required\", \"isNumber\"]}\n              errorMessages={[\n                \"Phone Number is required\",\n                \"Invalid Phone Number\",\n              ]}\n            />\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          required\n          fullWidth\n          placeholder=\"Subject\"\n          name=\"Subject\"\n          label=\"Subject\"\n          value={formValues.Subject}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Subject is required\"]}\n        />\n\n        <TextValidator\n          required\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type message\"\n          name=\"Request\"\n          label=\"Request\"\n          value=\"\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Message is required\"]}\n        />\n      </ValidatorForm>\n      <div\n        style={{\n          borderRadius: 5,\n          borderWidth: 1,\n          borderColor: \"purple\",\n        }}\n      >\n        <Button variant=\"contained\" color=\"secondary\" onClick={triggerSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}