{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/layout/navbar/index2.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport siteLogo from \"../../../assets/images/logo.svg\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [{\n  title: \"Home\",\n  to: \"/\"\n}, {\n  title: \"About\",\n  to: \"/about\"\n}, {\n  title: \"Services\",\n  to: \"/services\"\n}, {\n  title: \"Resources\",\n  to: \"/resources\"\n}, {\n  title: \"Blog\",\n  to: \"/blog\"\n}, {\n  title: \"Contact\",\n  to: \"/contact\"\n}];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\nconst useStyles = makeStyles(theme => ({\n  abRoot: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n    color: \"white\"\n  },\n  abScroll: {\n    background: \"primary\",\n    color: \"black\",\n    boxShadow: \"none\"\n  },\n  appBarTransparent: {\n    backgroundColor: \"rgba(255, 255, 255, 0.01)\",\n    boxShadow: \"none\"\n  },\n  appBarSolid: {\n    backgroundColor: \"rgba(255, 255, 255)\"\n  },\n  solidAppBar: {\n    background: \"white\",\n    color: \"black\"\n  }\n}));\n\nconst ResponsiveAppBar = () => {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isSolidAppBar, setSolidAppBar] = React.useState(true);\n  const [navBackground, setNavBackground] = React.useState(\"appBarTransparent\");\n  const [colorSwitch, setColorSwtch] = React.useState(\"white\");\n  const navRef = React.useRef();\n  navRef.current = navBackground;\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      const show = window.scrollY > 150;\n\n      if (show) {\n        setNavBackground(\"appBarSolid\");\n        setColorSwtch(\"black\");\n      } else {\n        setNavBackground(\"appBarTransparent\");\n        setColorSwtch(\"white\");\n      }\n    };\n\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    id: \"appbar-id\",\n    position: \"fixed\",\n    className: classes[navRef.current],\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: \"flex\",\n              md: \"none\"\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"account of current user\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\"\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            sx: {\n              display: {\n                xs: \"block\",\n                md: \"none\"\n              },\n              marginLeft: 10\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n              divider: true,\n              onClick: handleCloseNavMenu,\n              focusVisibleClassName: \"\",\n              sx: {\n                textTransform: \"capitalize\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                sx: {\n                  textTransform: \"capitaliza\"\n                },\n                children: page\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: siteLogo,\n            alt: \"\",\n            width: \"75%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: \"none\",\n              md: \"flex\"\n            },\n            marginLeft: 10\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: \"black\",\n                display: \"block\",\n                textTransform: \"capitalize\"\n              },\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResponsiveAppBar, \"kM4SWiHfFheWOedMJ/rcMqhtwGY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResponsiveAppBar;\nexport default ResponsiveAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveAppBar\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/layout/navbar/index2.js"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","siteLogo","makeStyles","Link","pages","title","to","settings","useStyles","theme","abRoot","background","boxShadow","color","abScroll","appBarTransparent","backgroundColor","appBarSolid","solidAppBar","ResponsiveAppBar","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","classes","isOpen","setIsOpen","isSolidAppBar","setSolidAppBar","navBackground","setNavBackground","colorSwitch","setColorSwtch","navRef","useRef","current","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","useEffect","handleScroll","show","window","scrollY","document","addEventListener","removeEventListener","flexGrow","display","xs","md","vertical","horizontal","Boolean","marginLeft","map","page","textTransform","my"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport siteLogo from \"../../../assets/images/logo.svg\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst pages = [\n  {\n    title: \"Home\",\n    to: \"/\",\n  },\n  {\n    title: \"About\",\n    to: \"/about\",\n  },\n  {\n    title: \"Services\",\n    to: \"/services\",\n  },\n  {\n    title: \"Resources\",\n    to: \"/resources\",\n  },\n  {\n    title: \"Blog\",\n    to: \"/blog\",\n  },\n  {\n    title: \"Contact\",\n    to: \"/contact\",\n  },\n];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst useStyles = makeStyles((theme) => ({\n  abRoot: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n    color: \"white\",\n  },\n  abScroll: {\n    background: \"primary\",\n    color: \"black\",\n    boxShadow: \"none\",\n  },\n  appBarTransparent: {\n    backgroundColor: \"rgba(255, 255, 255, 0.01)\",\n    boxShadow: \"none\",\n  },\n  appBarSolid: {\n    backgroundColor: \"rgba(255, 255, 255)\",\n  },\n  solidAppBar: {\n    background: \"white\",\n    color: \"black\",\n  },\n}));\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const classes = useStyles();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isSolidAppBar, setSolidAppBar] = React.useState(true);\n  const [navBackground, setNavBackground] = React.useState(\"appBarTransparent\");\n  const [colorSwitch, setColorSwtch] = React.useState(\"white\");\n\n  const navRef = React.useRef();\n  navRef.current = navBackground;\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      const show = window.scrollY > 150;\n      if (show) {\n        setNavBackground(\"appBarSolid\");\n        setColorSwtch(\"black\");\n      } else {\n        setNavBackground(\"appBarTransparent\");\n        setColorSwtch(\"white\");\n      }\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  return (\n    <AppBar id=\"appbar-id\" position=\"fixed\" className={classes[navRef.current]}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n                marginLeft: 10,\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  key={page}\n                  divider={true}\n                  onClick={handleCloseNavMenu}\n                  focusVisibleClassName=\"\"\n                  sx={{\n                    textTransform: \"capitalize\",\n                  }}\n                >\n                  <Typography\n                    textAlign=\"center\"\n                    sx={{ textTransform: \"capitaliza\" }}\n                  >\n                    {page}\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Link to={\"/\"}>\n            <img src={siteLogo} alt=\"\" width=\"75%\" />\n          </Link>\n          <Box\n            sx={{\n              flexGrow: 1,\n              display: { xs: \"none\", md: \"flex\" },\n              marginLeft: 10,\n            }}\n          >\n            {pages.map((page) => (\n              <div>\n                <Button\n                  key={page}\n                  onClick={handleCloseNavMenu}\n                  sx={{\n                    my: 2,\n                    color: \"black\",\n                    display: \"block\",\n                    textTransform: \"capitalize\",\n                  }}\n                >\n                  {page}\n                </Button>\n              </div>\n            ))}\n          </Box>\n\n          {/* <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box> */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n"]},"metadata":{},"sourceType":"module"}