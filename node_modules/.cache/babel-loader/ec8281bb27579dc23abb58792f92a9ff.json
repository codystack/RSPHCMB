{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/layout/navbar/main_navbar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { AppBar, makeStyles } from \"@mui/material\";\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler } from \"reactstrap\";\nimport NavbarActions from \"./nav_actions\";\nimport siteLogo from \"../../../assets/images/logo_footer.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  abRoot: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n    color: \"white\"\n  },\n  abScroll: {\n    background: \"primary\",\n    color: \"black\",\n    boxShadow: \"none\"\n  },\n  appBarTransparent: {\n    backgroundColor: \"rgba(255, 255, 255, 0.01)\",\n    boxShadow: \"none\"\n  },\n  appBarSolid: {\n    backgroundColor: \"rgba(255, 255, 255)\"\n  },\n  solidAppBar: {\n    background: \"white\",\n    color: \"black\"\n  }\n}));\n\nconst MainNavbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isNavbar, setIsNavbar] = React.useState(true);\n  const [isScroll, setIsScroll] = React.useState(false);\n  const [isSolidAppBar, setSolidAppBar] = React.useState(true); //const [isSolidBg, setIsSolidBg] = React.useState(false);\n\n  const [navBackground, setNavBackground] = React.useState(\"appBarTransparent\");\n  const [colorSwitch, setColorSwtch] = React.useState(\"white\");\n  const navRef = React.useRef();\n  navRef.current = navBackground;\n  React.useEffect(() => {\n    const handleScroll = () => {\n      const show = window.scrollY > 150;\n\n      if (show) {\n        setNavBackground(\"appBarSolid\");\n        setColorSwtch(\"black\");\n      } else {\n        setNavBackground(\"appBarTransparent\");\n        setColorSwtch(\"white\");\n      }\n    };\n\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", isSolidAppBar ? /*#__PURE__*/_jsxDEV(AppBar, {\n      id: \"appbar-id\" // className={classes.solidAppBar}\n      ,\n      className: classes[navRef.current],\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"#ffffff\",\n        light: true,\n        expand: \"md\",\n        className: \"site__navbar__adjust web__rem__margin  navbar-fixed-top container\",\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: siteLogo,\n            className: \"site__logo\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: isOpen,\n          navbar: true,\n          className: \".site__navbar__items__adjust\",\n          children: /*#__PURE__*/_jsxDEV(NavbarActions, {\n            textColor: colorSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AppBar, {\n      id: \"appbar-id\",\n      position: \"fixed\",\n      className: classes[navRef.current],\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"#ffffff\",\n        light: true,\n        expand: \"md\",\n        className: \"site__navbar__adjust web__rem__margin  navbar-fixed-top container\",\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: siteLogo,\n            className: \"site__logo\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: isOpen,\n          navbar: true,\n          className: \".site__navbar__items__adjust\",\n          children: /*#__PURE__*/_jsxDEV(NavbarActions, {\n            textColor: colorSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainNavbar, \"M52XPLOpo0BQZ4EU4qZlt24zfTw=\", false, function () {\n  return [useStyles];\n});\n\n_c = MainNavbar;\nexport default MainNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainNavbar\");","map":{"version":3,"sources":["/Users/macintosh/Developer/RSPHCMD-Website/src/presentation/layout/navbar/main_navbar.js"],"names":["React","AppBar","makeStyles","Collapse","Navbar","NavbarBrand","NavbarToggler","NavbarActions","siteLogo","useStyles","theme","abRoot","background","boxShadow","color","abScroll","appBarTransparent","backgroundColor","appBarSolid","solidAppBar","MainNavbar","classes","isOpen","setIsOpen","useState","isNavbar","setIsNavbar","isScroll","setIsScroll","isSolidAppBar","setSolidAppBar","navBackground","setNavBackground","colorSwitch","setColorSwtch","navRef","useRef","current","useEffect","handleScroll","show","window","scrollY","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AppBar, makeStyles } from \"@mui/material\";\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler } from \"reactstrap\";\nimport NavbarActions from \"./nav_actions\";\n\nimport siteLogo from \"../../../assets/images/logo_footer.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  abRoot: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n    color: \"white\",\n  },\n  abScroll: {\n    background: \"primary\",\n    color: \"black\",\n    boxShadow: \"none\",\n  },\n  appBarTransparent: {\n    backgroundColor: \"rgba(255, 255, 255, 0.01)\",\n    boxShadow: \"none\",\n  },\n  appBarSolid: {\n    backgroundColor: \"rgba(255, 255, 255)\",\n  },\n  solidAppBar: {\n    background: \"white\",\n    color: \"black\",\n  },\n}));\n\nconst MainNavbar = () => {\n  const classes = useStyles();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isNavbar, setIsNavbar] = React.useState(true);\n  const [isScroll, setIsScroll] = React.useState(false);\n  const [isSolidAppBar, setSolidAppBar] = React.useState(true);\n  //const [isSolidBg, setIsSolidBg] = React.useState(false);\n  const [navBackground, setNavBackground] = React.useState(\"appBarTransparent\");\n  const [colorSwitch, setColorSwtch] = React.useState(\"white\");\n\n  const navRef = React.useRef();\n  navRef.current = navBackground;\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      const show = window.scrollY > 150;\n      if (show) {\n        setNavBackground(\"appBarSolid\");\n        setColorSwtch(\"black\");\n      } else {\n        setNavBackground(\"appBarTransparent\");\n        setColorSwtch(\"white\");\n      }\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  return (\n    <div>\n      {\" \"}\n      {isSolidAppBar ? (\n        <AppBar\n          id=\"appbar-id\"\n          // className={classes.solidAppBar}\n          className={classes[navRef.current]}\n          position=\"fixed\"\n        >\n          <Navbar\n            color=\"#ffffff\"\n            light\n            expand=\"md\"\n            className=\"site__navbar__adjust web__rem__margin  navbar-fixed-top container\"\n          >\n            <NavbarBrand href=\"/\">\n              <img src={siteLogo} className=\"site__logo\" alt=\"\" />\n            </NavbarBrand>\n            {/* Below, we'll add toggler for auto-collapse */}\n            {/* <NavbarToggler onClick={toggleOpenState} /> */}\n\n            <Collapse\n              isOpen={isOpen}\n              navbar\n              className=\".site__navbar__items__adjust\"\n            >\n              <NavbarActions textColor={colorSwitch} />\n            </Collapse>\n          </Navbar>\n        </AppBar>\n      ) : (\n        <AppBar\n          id=\"appbar-id\"\n          position=\"fixed\"\n          className={classes[navRef.current]}\n        >\n          <Navbar\n            color=\"#ffffff\"\n            light\n            expand=\"md\"\n            className=\"site__navbar__adjust web__rem__margin  navbar-fixed-top container\"\n          >\n            <NavbarBrand href=\"/\">\n              <img src={siteLogo} className=\"site__logo\" alt=\"\" />\n            </NavbarBrand>\n            {/* Below, we'll add toggler for auto-collapse */}\n            {/* <NavbarToggler onClick={toggleOpenState} /> */}\n\n            <Collapse\n              isOpen={isOpen}\n              navbar\n              className=\".site__navbar__items__adjust\"\n            >\n              <NavbarActions textColor={colorSwitch} />\n            </Collapse>\n          </Navbar>\n        </AppBar>\n      )}\n    </div>\n  );\n};\n\nexport default MainNavbar;\n"]},"metadata":{},"sourceType":"module"}